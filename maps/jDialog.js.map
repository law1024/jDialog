{"version":3,"sources":["core.js","event.js","helper.js","operations.js","setting.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvfile":"jDialog.js","sourcesContent":["var win = window;\r\nvar doc = document;\r\nvar jDialog = function (message, callBack) {\r\n    return new jDialog.fn.init(message, callBack);\r\n}\r\n//\r\njDialog.fn = jDialog.prototype = {\r\n    constructor: jDialog,\r\n    init: function (message, callBack) {\r\n\r\n        if (!message) {\r\n            return this;\r\n        }\r\n        this.options = {\r\n            title: '提示', // title\r\n            modal: true, //是否启用模式窗口\r\n            msg: '', // messages\r\n            autoHide: 0, // 自动销毁\r\n            // 页面中只存活一个dialog，\r\n            // 此选择表述dialog.destroy将执行隐藏操作\r\n            // 而不销毁\r\n            preventHide: false,\r\n            callBack: null\r\n        };\r\n\r\n        if (this.isPlainObject(message)) {\r\n            this.extend(this.options, message);\r\n\r\n        } else if (typeof message === 'string') {\r\n            this.options.msg = message;\r\n\r\n            if (this.isFunction(callBack)) {\r\n                this.options.callBack = callBack;\r\n            }\r\n        }\r\n\r\n        this.events = this.initEventSystem();\r\n        this.renderDOM();\r\n\r\n        // 只存活一个dialog\r\n        // TODO : options.preventHide;\r\n        if (D.currentDialog) {\r\n            D.currentDialog.destory();\r\n        }\r\n        D.currentDialog = this;\r\n        return this;\r\n    }\r\n}\r\n//\r\njDialog.fn.extend = function () {\r\n\r\n    var target = arguments[0] || {};\r\n    var options = arguments[1] || {};\r\n    var name;\r\n    var copy;\r\n\r\n    if (arguments.length === 1) {\r\n        target = this;\r\n        options = arguments[0];\r\n    }\r\n\r\n    for (name in options) {\r\n        copy = options[name];\r\n        if (copy !== undefined) {\r\n            target[name] = copy;\r\n        }\r\n    }\r\n\r\n    return target;\r\n}\r\n//\r\njDialog.fn.init.prototype = jDialog.fn;","jDialog.fn.extend({\r\n    initEventSystem: function () {\r\n        var self = this;\r\n        var ret = {};\r\n\r\n        function add(actionName, handler) {\r\n            if (!self.events.has(actionName)) {\r\n                self.events.actions[actionName] = [];\r\n            }\r\n            if (self.isFunction(handler)) {\r\n                self.events.actions[actionName].push(handler);\r\n            }\r\n\r\n        }\r\n\r\n        function remove(actionName) {\r\n            if (self.events.has(actionName)) {\r\n                return delete  self.events.actions[actionName];\r\n            }\r\n            console.warn(actionName + '不存在');\r\n            return false;\r\n        }\r\n\r\n        function has(actionName) {\r\n            return self.events.actions[actionName] ? true : false;\r\n        }\r\n\r\n        ret.actions = {\r\n            destory: [\r\n                function () {\r\n                    self.destory();\r\n                }\r\n            ]\r\n        };\r\n        ret.add = add;\r\n        ret.remove = remove;\r\n        ret.has = has;\r\n        return ret;\r\n    }\r\n});","jDialog.fn.extend({\r\n    //\r\n    isFunction: function (fn) {\r\n        return Object.prototype.toString.call(fn) === '[object Function]';\r\n    },\r\n    //\r\n    isPlainObject: function (obj) {\r\n        if (obj === null) {\r\n            return false;\r\n        }\r\n        return obj.constructor == {}.constructor;\r\n    }\r\n});","jDialog.fn.extend({\r\n    renderDOM: function () {\r\n        this.wrapper = this._createElement('div', {\r\n            className: 'dialog'\r\n        });\r\n\r\n        this.wrapper.style.zIndex = this.currentDOMIndex = 9;\r\n\r\n        this.wrapper\r\n            .appendChild(this.getHeader());\r\n        this.wrapper\r\n            .appendChild(this.getContainer());\r\n        this.wrapper\r\n            .appendChild(this.getFooter());\r\n\r\n        //\r\n        this.setTitle(this.options.title)\r\n            .setMsg(this.options.msg);\r\n\r\n        if (this.options.modal) {\r\n            this.showModal();\r\n        }\r\n\r\n        if (this.options.callBack) {\r\n            this.addButton('确定', 'apply', this.options.callBack);\r\n        }\r\n        this.addButton('取消', 'destory');\r\n\r\n        this.wrapper.addEventListener('click', this.eventRouter.bind(this), false);\r\n        doc.body.appendChild(this.wrapper);\r\n        return this;\r\n    },\r\n    eventRouter: function (event) {\r\n        var target = event.target;\r\n        var actionName = target.getAttribute('data-dialog-action');\r\n        if (!actionName) {\r\n            return;\r\n        }\r\n        this.fireEvent(actionName);\r\n    },\r\n    _createElement: function (tagName, attrs) {\r\n        var element = doc.createElement(tagName);\r\n        this.extend(element, attrs);\r\n        return element;\r\n    },\r\n    getHeader: function () {\r\n        if (!this.header) {\r\n            this.header = this._createElement('div', {\r\n                className: 'dialog-header'\r\n            });\r\n        }\r\n        return this.header;\r\n    },\r\n    getContainer: function () {\r\n        if (!this.container) {\r\n            this.container = this._createElement('div', {\r\n                className: 'dialog-body'\r\n            });\r\n        }\r\n        return this.container;\r\n    },\r\n    getFooter: function () {\r\n        if (!this.footer) {\r\n            this.footer = this._createElement('div', {\r\n                className: 'dialog-footer'\r\n            });\r\n        }\r\n        return this.footer;\r\n    },\r\n    addButton: function (text, actionName, handler) {\r\n        var element = this._createElement('a', {\r\n            href: 'javascript:;',\r\n            className: 'dialog-btn',\r\n            innerHTML: text || '按钮'\r\n        });\r\n        if (actionName) {\r\n            element.setAttribute('data-dialog-action', actionName);\r\n            this.events.add(actionName, handler);\r\n        }\r\n        //\r\n        this.getFooter().appendChild(element);\r\n        return this;\r\n    },\r\n    autoHide: function () {\r\n        return this;\r\n    },\r\n    fireEvent: function (actionName) {\r\n        if (this.events.has(actionName)) {\r\n            var actions = this.events.actions[actionName];\r\n            var length = actions.length;\r\n            var i;\r\n            var fn;\r\n            if (!length) {\r\n                return this;\r\n            }\r\n            //while ((fn = actions.shift())) {\r\n            //    fn.call(this);\r\n            //}\r\n\r\n            for (i = 0; i < length; i++) {\r\n                actions[i].call(this);\r\n            }\r\n        }\r\n        return this;\r\n    },\r\n    destory: function () {\r\n        if (this.wrapper) {\r\n            doc.body.removeChild(this.wrapper);\r\n        }\r\n        if (this.modal) {\r\n            doc.body.removeChild(this.modal);\r\n        }\r\n        this.wrapper.removeEventListener('click', this.eventRouter, false);\r\n        D.currentDialog = null;\r\n        return this;\r\n    },\r\n    createModal: function () {\r\n        var element = this._createElement('div');\r\n        element.style.cssText = \";background:rgba(0,0,0,0.3);width:100%;\"\r\n        + \"height:100%;position:fixed;left:0;top:0;z-index:\"\r\n        + (this.currentDOMIndex - 1);\r\n        element.onclick = function () {\r\n            this.fireEvent('destory');\r\n        }.bind(this);\r\n        doc.body.appendChild(element);\r\n        return element;\r\n    },\r\n    hideModal: function () {\r\n        if (!this.modal) {\r\n            this.modal = this.createModal();\r\n        } else {\r\n            this.modal.style.display = \"none\";\r\n        }\r\n        return this;\r\n    },\r\n    showModal: function () {\r\n        if (!this.modal) {\r\n            this.modal = this.createModal();\r\n        } else {\r\n            this.modal.style.display = \"\";\r\n        }\r\n        return this;\r\n    }\r\n});","jDialog.fn.extend({\r\n    setTitle: function (text) {\r\n        this.getHeader().innerHTML = text;\r\n        return this;\r\n    },\r\n    setMsg: function (msg) {\r\n        this.getContainer().innerHTML = msg;\r\n        return this;\r\n    },\r\n    setHeight: function (height) {\r\n        if (!/em|px|rem|pt/gi.test(height)) {\r\n            height = height + \"px\";\r\n        }\r\n        this.wrapper.style.height = height;\r\n        return this;\r\n    },\r\n    setWidth: function (width) {\r\n        if (!/em|px|rem|pt/gi.test(width)) {\r\n            width = width + \"px\";\r\n        }\r\n        this.wrapper.style.width = width;\r\n        return this;\r\n    },\r\n    setIndex: function (index) {\r\n        this.currentDOMIndex = index || 9;\r\n        this.wrapper.style.zIndex = this.currentDOMIndex;\r\n        return this;\r\n    },\r\n    setTop: function (top) {\r\n        if (!/em|px|rem|pt/gi.test(top)) {\r\n            top = top + \"px\";\r\n        }\r\n        this.wrapper.style.top = top;\r\n        return this;\r\n    },\r\n});"],"sourceRoot":"/source/"}