{"version":3,"sources":["core.js","helper.js","event.js","operations.js","setting.js","components.js"],"names":[],"mappingsxhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"jDialog.js","sourcesContent":["var win = window;\nvar doc = document;\nvar jDialog = function (message, callBack) {\n    /**\n     *\n     */\n    return new jDialog.fn.init(message, callBack);\n}\n\n/**\n *\n * @type {{constructor: Function, init: Function}}\n */\njDialog.fn = jDialog.prototype = {\n    constructor: jDialog,\n    version: '0.9.1',\n    /**\n     *\n     * @param message\n     * @param callBack\n     * @returns {jDialog}\n     */\n    init: function (message, callBack) {\n\n        if (!message) {\n            return this;\n        }\n        this.options = {\n            title: '提示', // title\n            modal: true, //是否启用模式窗口\n            msg: '', // messages\n            autoHide: 0, // 自动销毁\n            // 页面中只存活一个dialog，\n            // 此选择表述dialog.destroy将执行隐藏操作\n            // 而不销毁\n            preventHide: false,\n            callBack: null\n        };\n\n        if (this.isPlainObject(message)) {\n            this.extend(this.options, message);\n\n        } else if (/string|number|boolean/gi.test(typeof(message))) {\n            this.options.msg = message;\n            if (this.isFunction(callBack)) {\n                this.options.callBack = callBack;\n            }\n        }\n\n        this.events = this.initEventSystem();\n        this.renderDOM();\n\n        // 只存活一个dialog\n        // TODO : options.preventHide;\n        if (jDialog.currentDialog) {\n            jDialog.currentDialog.destory();\n        }\n        jDialog.currentDialog = this;\n        return this;\n    }\n}\n\n/**\n *\n * @returns {*|{}}\n */\njDialog.extend = jDialog.fn.extend = function () {\n\n    var target = arguments[0] || {};\n    var options = arguments[1] || {};\n    var name;\n    var copy;\n\n    if (arguments.length === 1) {\n        target = this;\n        options = arguments[0];\n    }\n\n    for (name in options) {\n        copy = options[name];\n        if (copy !== undefined) {\n            target[name] = copy;\n        }\n    }\n\n    return target;\n}\n\n/**\n *\n * @type {{constructor: Function, init: Function}|jDialog.fn|*}\n */\njDialog.fn.init.prototype = jDialog.fn;","jDialog.fn.extend({\n\n    /**\n     *\n     * @param fn\n     * @returns {boolean}\n     */\n    isFunction: function (fn) {\n        return Object.prototype.toString.call(fn) === '[object Function]';\n    },\n\n    /**\n     *\n     * @param obj\n     * @returns {boolean}\n     */\n    isPlainObject: function (obj) {\n        if (obj === null) {\n            return false;\n        }\n        return obj.constructor == {}.constructor;\n    }\n});","jDialog.fn.extend({\n\n    /**\n     *\n     * @returns {{}}\n     */\n    initEventSystem: function () {\n        var self = this;\n        var ret = {};\n\n        function add(actionName, handler) {\n            if (!self.events.has(actionName)) {\n                self.events.actions[actionName] = [];\n            }\n            if (self.isFunction(handler)) {\n                self.events.actions[actionName].push(handler);\n            }\n\n        }\n\n        function remove(actionName) {\n            if (self.events.has(actionName)) {\n                return delete  self.events.actions[actionName];\n            }\n            console.warn(actionName + '不存在');\n            return false;\n        }\n\n        function has(actionName) {\n            return self.events.actions[actionName] ? true : false;\n        }\n\n        ret.actions = {\n            destory: [\n                function () {\n                    self.destory();\n                }\n            ]\n        };\n        ret.add = add;\n        ret.remove = remove;\n        ret.has = has;\n        return ret;\n    }\n});","jDialog.fn.extend({\n\n    /**\n     *\n     * @returns {*}\n     */\n    renderDOM: function () {\n\n        var wrapper = this.getWrapper();\n\n        wrapper\n            .appendChild(this.getHeader());\n        wrapper\n            .appendChild(this.getContainer());\n        wrapper\n            .appendChild(this.getFooter());\n\n        //\n        this.title(this.options.title)\n            .message(this.options.msg);\n\n        if (this.options.modal) {\n            this.showModal();\n        }\n\n        if (this.options.callBack) {\n            this.addButton('确定', 'apply', this.options.callBack);\n        }\n\n        this.addButton('取消', 'destory');\n\n        wrapper.addEventListener('click', this.eventRouter.bind(this), false);\n        doc.body.appendChild(wrapper);\n        return this;\n    },\n\n    /**\n     *\n     * @param event\n     */\n    eventRouter: function (event) {\n        var target = event.target;\n        var actionName = target.getAttribute('data-dialog-action');\n        if (!actionName) {\n            return;\n        }\n        this.fireEvent(actionName);\n    },\n\n    /**\n     *\n     * @param tagName\n     * @param attrs\n     * @returns {HTMLElement}\n     * @private\n     */\n    _createElement: function (tagName, attrs) {\n        var element = doc.createElement(tagName);\n        this.extend(element, attrs);\n        return element;\n    },\n\n    getWrapper: function () {\n        if (!this.wrapper) {\n            this.wrapper = this._createElement('div', {\n                className: 'dialog'\n            });\n\n            this.wrapper.style.zIndex = this.currentDOMIndex = 9;\n        }\n\n        return this.wrapper;\n    },\n\n    /**\n     *\n     * @returns {HTMLElement|*|header}\n     */\n    getHeader: function () {\n        if (!this.header) {\n            this.header = this._createElement('div', {\n                className: 'dialog-header'\n            });\n        }\n        return this.header;\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    hideHeader: function () {\n        this.getHeader().style.display = 'none';\n        return this;\n    },\n\n    /**\n     *\n     * @returns {HTMLElement|*|container}\n     */\n    getContainer: function () {\n        if (!this.container) {\n            this.container = this._createElement('div', {\n                className: 'dialog-body'\n            });\n        }\n        return this.container;\n    },\n\n    /**\n     *\n     * @returns {HTMLElement|*|footer}\n     */\n    getFooter: function () {\n        if (!this.footer) {\n            this.footer = this._createElement('div', {\n                className: 'dialog-footer'\n            });\n        }\n        return this.footer;\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    hideFooter: function () {\n        this.getFooter().style.display = 'none';\n        return this;\n    },\n\n    /**\n     *\n     * @param text\n     * @param actionName\n     * @param handler\n     * @returns {*}\n     */\n    addButton: function (text, actionName, handler) {\n        var element = this._createElement('a', {\n            href: 'javascript:;',\n            className: 'dialog-btn',\n            innerHTML: text || '按钮'\n        });\n        if (actionName) {\n            element.setAttribute('data-dialog-action', actionName);\n            this.events.add(actionName, handler);\n        }\n        //\n        this.getFooter().appendChild(element);\n        return this;\n    },\n\n    /**\n     *\n     * @param className\n     * @returns {*}\n     */\n    addClass: function (className) {\n        this.getWrapper().classList.add(className);\n        return this;\n    },\n\n    /**\n     *\n     * @param className\n     */\n    removeClass: function (className) {\n        this.getWrapper().classList.remove(className);\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    autoHide: function (delay) {\n\n        // 0则自动销毁；\n        if (delay == 0) {\n            this.destory();\n            return this;\n        }\n\n        //\n        if (delay === undefined) {\n            this.autoHide(this.options.autoHide);\n            return this;\n        }\n\n        // 将会已最新的delay为准\n        if (this.autoHideTimer) {\n            clearTimeout(this.autoHideTimer);\n        }\n\n        this.autoHideTimer = setTimeout(function () {\n            this.destory();\n            clearTimeout(this.autoHideTimer);\n            this.autoHideTimer = null;\n        }.bind(this), delay * 1000);\n\n        return this;\n    },\n\n    /**\n     *\n     * @param actionName\n     * @returns {*}\n     */\n    fireEvent: function (actionName) {\n        if (this.events.has(actionName)) {\n            var actions = this.events.actions[actionName];\n            var length = actions.length;\n            var i = 0;\n            //var fn;\n            if (!length) {\n                return this;\n            }\n            //while ((fn = actions.shift())) {\n            //    fn.call(this);\n            //}\n\n            for (; i < length; i++) {\n                actions[i].call(this);\n            }\n        }\n        return this;\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    destory: function () {\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this.eventRouter, false);\n            doc.body.removeChild(this.wrapper);\n        }\n        if (this.modal) {\n            doc.body.removeChild(this.modal);\n        }\n        jDialog.currentDialog = null;\n        return this;\n    },\n\n    /**\n     *\n     * @returns {HTMLElement}\n     */\n    createModal: function () {\n        var element = this._createElement('div');\n        element.style.cssText = \";background:rgba(0,0,0,0.3);width:100%;\" + \"height:100%;position:fixed;left:0;top:0;z-index:\" + (this.currentDOMIndex - 1);\n        element.onclick = function () {\n            this.fireEvent('destory');\n        }.bind(this);\n        doc.body.appendChild(element);\n        return element;\n    },\n\n    /**\n     *\n     * @returns {modal|*}\n     */\n    getModal: function () {\n        if (!this.modal) {\n            this.modal = this.createModal();\n        }\n        return this.modal;\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    hideModal: function () {\n        this.getModal().style.display = 'none';\n        return this;\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    showModal: function () {\n        this.getModal().style.display = '';\n        return this;\n    }\n});\n","/**\n *\n * @param number\n * @returns {*}\n */\nvar addPixelUnit = function (number) {\n    if (!/em|px|rem|pt|%/gi.test(number)) {\n        number = number + 'px';\n    }\n    return number;\n}\n\njDialog.fn.extend({\n\n    /**\n     * 返回当前的title或为dialog设置title\n     * @param text\n     * @returns {*}\n     */\n    title: function (value) {\n        if (value === undefined) {\n            return this.options.title;\n        }\n        this.getHeader().innerHTML = value;\n        return this;\n    },\n\n    /**\n     * 返回当前设置的message或设置message\n     * @param value\n     * @returns {*}\n     */\n    message: function (value) {\n        if (value === undefined) {\n            return this.options.msg;\n        }\n        this.getContainer().innerHTML = value;\n        return this;\n    },\n\n    /**\n     * 返回当前的height或为dialog设置height\n     * @param value\n     * @returns {*}\n     */\n    height: function (value) {\n        if (value === undefined) {\n            return this.getWrapper().offsetHeight;\n        }\n        this.wrapper.style.height = addPixelUnit(value);\n        return this;\n    },\n\n    /**\n     * 返回当前dialog的宽度或为dialog设置宽度\n     * @param value\n     * @returns {*}\n     */\n    width: function (value) {\n        if (value === undefined) {\n            return this.getWrapper().offsetWidth;\n        }\n        this.wrapper.style.width = addPixelUnit(value);\n        return this;\n    },\n\n    /**\n     * 返回当前的z-index值或为dialog设置z-index\n     * @param index\n     * @returns {*}\n     */\n    index: function (value) {\n        if (value === undefined) {\n            return this.currentDOMIndex;\n        }\n        this.currentDOMIndex = value;\n        this.wrapper.style.zIndex = this.currentDOMIndex;\n        // 永远比wrapper小1\n        this.getModal().style.zIndex = this.currentDOMIndex - 1;\n        return this;\n    },\n\n    /**\n     *  返回当前的top值或者为dialog设置top\n     * @param value\n     * @returns {*}\n     */\n    top: function (value) {\n        if (value === undefined) {\n            return win.getComputedStyle(this.getWrapper()).top;\n        }\n        this.wrapper.style.top = addPixelUnit(value);\n        return this;\n    }\n});","/**\n *\n */\n//jDialog.extend({\n//    alert: function (message, callBack) {\n//        return jDialog(message, callBack);\n//    },\n//    toast: function (message, callBack) {\n//        return jDialog(message, callBack).hideHeader().hideFooter().autoHide(1);\n//    },\n//    confirm: function (message, callBack) {\n//        return jDialog(message).addButton('ȷ��', 'apply', callBack);\n//    }\n//});"],"sourceRoot":"/source/"}